services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: premier_league
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network


  scraper:
    build:
      context: ./scraper
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_DB: premier_league
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres      
      DOCKER: "true"
      PYTHONUNBUFFERED: 1  # This ensures Python output isn't buffered
    networks:
      - app-network
    dns:
      - 8.8.8.8  # Use Google's DNS
      - 8.8.4.4
    volumes:
      - ./scraper:/app  # Mount code for development
    depends_on:
      db:
        condition: service_healthy
    # restart: unless-stopped
    command: ["python", "-u", "main.py"]  # -u for unbuffered output

  # backend:
  #   build:
  #     context: ./backend
  #   ports:
  #     - "5001:5000"
  #   environment:
  #     POSTGRES_HOST: db
  #     POSTGRES_PORT: 5432
  #     POSTGRES_DB: premier_league
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #   networks:
  #     - app-network

  api:
      build:
        context: ./backend
      ports:
        - "5001:5000"
      environment:
        POSTGRES_HOST: db
        POSTGRES_PORT: 5432
        POSTGRES_DB: premier_league
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
      depends_on:
        db:
          condition: service_healthy
      networks:
        - app-network

networks:
  app-network:
    driver: bridge

# Add this volumes section at the bottom
volumes:
  pgdata:


# version: '3.8'
# services:
#   db:
#     image: postgres:16
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: postgres
#       POSTGRES_DB: football_db
#     ports:
#       - "5001:5432"
#     volumes:
#       - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql